{
  "Tool use": {
    "messages": [
      {
        "role": "user",
        "content": "hello friend! my name is ade, please remember that. then, search for the definition of singularity"
      },
      {
        "role": "tool",
        "content": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "type": "function",
          "function": {
            "name": "bio",
            "description": "The `bio` tool allows you to persist information across conversations. The information will appear in the model set context below in future conversations.",
            "parameters": {
              "type": "object",
              "properties": {
                "memory": {
                  "type": "string",
                  "description": "The information you want to persist across conversations."
                }
              },
              "required": ["memory"]
            }
          }
        }
      },
      {
        "role": "tool",
        "content": {
          "$schema": "https://json-schema.org/draft/2020-12/schema",
          "type": "function",
          "function": {
            "name": "search",
            "description": "The `search` tool allows you to search for information.",
            "parameters": {
              "type": "object",
              "properties": { "query": { "type": "string", "description": "The information you want to search for." } },
              "required": ["query"]
            }
          }
        }
      },
      {
        "role": "tool",
        "fromServer": true,
        "content": { "function": "bio", "arguments": { "memory": "User's name is Ade." } }
      },
      {
        "role": "tool",
        "fromServer": true,
        "content": { "function": "search", "arguments": { "query": "definition of singularity" } }
      }
    ]
  },
  "Sample chat": {
    "messages": [
      { "role": "system", "content": "This is a system message." },
      { "role": "developer", "content": "This is a developer message." },
      { "role": "user", "content": "This is a user message." },
      {
        "role": "assistant",
        "fromServer": true,
        "content": "\n## Header\n\nThis is a small showcase of common elements in markdown for testing purposes. Here's a `span`, and *italics*  and **bold** text. Here's a [link](https://www.kaggle.com). Here's a list:\n\n- item 1\n- item 2\n- item 3\n\nHere's a numbered list:\n\n1. item 1\n2. item 2\n3. item 3\n\nHere's a table:\n\n| Header 1 | Header 2 |\n|----------|----------|\n| cell 1   | cell 2   |\n| cell 3   | cell 4   |\n\nHere's a code block:\n\n```typescript\nconst interactive = css`\n  cursor: pointer;\n  user-select: none;\n  :hover {\n    opacity: 1;\n  }\n`;\nconst Emphasis = styled.em<{ isCollapsed?: boolean }>(\n  css`\n    font-weight: italic;\n    opacity: 0.7;\n  `,\n  ({ isCollapsed }) => {\n    if (!isCollapsed) return;\n    return css`\n      :before {\n        content: \"( \";\n        opacity: 0.3;\n      }\n      :after {\n        content: \" )\";\n        opacity: 0.3;\n      }\n    `;\n  },\n  interactive,\n);\n```\n\nHere's an image:\n\n![image](https://www.kaggle.com/static/images/site-logo.png)\n\nHere's a blockquote:\n\n> This is a blockquote.\n\nHere's a horizontal rule:\n\n---\n"
      },
      { "role": "info", "fromServer": true, "content": "This is an info message." },
      { "role": "error", "fromServer": true, "content": "This is an error message." }
    ]
  }
}
